import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler, LabelEncoder

# ğŸ“Œ Charger un fichier CSV (ajuster le chemin selon l'emplacement du fichier)
file_path = "02-14-2018.csv"
df = pd.read_csv(file_path)

print("\nğŸ“Œ Avant le nettoyage :")
print(df.info())

# ğŸ”¹ 1. Suppression des doublons
initial_rows = df.shape[0]
df = df.drop_duplicates()
print(f"\nâœ… Suppression des doublons : {initial_rows - df.shape[0]} lignes supprimÃ©es.")

# ğŸ”¹ 2. Gestion des valeurs manquantes
missing_values = df.isnull().sum()
missing_cols = missing_values[missing_values > 0].index.tolist()

# Suppression des colonnes avec trop de valeurs manquantes (>30%)
threshold = 0.3 * df.shape[0]
cols_to_drop = [col for col in missing_cols if missing_values[col] > threshold]
df = df.drop(columns=cols_to_drop)
print(f"âœ… Colonnes supprimÃ©es Ã  cause de valeurs manquantes : {cols_to_drop}")

# Remplacement des valeurs manquantes restantes par la mÃ©diane
for col in missing_cols:
    if col in df.columns:
        df[col] = df[col].fillna(df[col].median())

print("\nâœ… Valeurs manquantes traitÃ©es.")

# ğŸ”¹ 3. Conversion des types de donnÃ©es (float64 â†’ float32 pour Ã©conomiser de la mÃ©moire)
num_cols = df.select_dtypes(include=['float64']).columns
df[num_cols] = df[num_cols].astype('float32')

print("\nâœ… Conversion des types de donnÃ©es effectuÃ©e.")

# ğŸ”¹ 4. Encodage des labels (trafic normal vs attaques)
if 'Label' in df.columns:
    encoder = LabelEncoder()
    df['Label'] = encoder.fit_transform(df['Label'])  # Normal (0) / Attaque (1+ pour plusieurs types)

print("\nâœ… Encodage des labels effectuÃ©.")

# ğŸ”¹ 5. Normalisation des valeurs numÃ©riques
scaler = StandardScaler()
num_cols = df.select_dtypes(include=[np.number]).columns
df[num_cols] = scaler.fit_transform(df[num_cols])

print("\nâœ… Normalisation des valeurs numÃ©riques effectuÃ©e.")

# ğŸ”¹ 6. VÃ©rification aprÃ¨s nettoyage
print("\nğŸ“Œ AprÃ¨s nettoyage :")
print(df.info())
print("\nâœ… Nettoyage des donnÃ©es terminÃ© !")

# ğŸ”¹ 7. Sauvegarde du dataset nettoyÃ©
df.to_csv("CSE-CIC-IDS2018_cleaned.csv", index=False)
print("\nâœ… Dataset nettoyÃ© enregistrÃ© sous 'CSE-CIC-IDS2018_cleaned.csv'.")
